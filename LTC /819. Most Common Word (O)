class Solution:
    def mostCommonWord(self, paragraph: str, banned: List[str]) -> str:

        # \w : 단어문자 의미 => 단어가 아닌 문자는 공백처리
        words = [word for word in re.sub(r'[^\w]', ' ', paragraph)
            .lower().split()
                 if word not in banned]
        # counter 객체 사용
        counts = collections.Counter(words)
        # 가장 흔하게 등장하는 단어의 첫 번째 인덱스 리턴
        return counts.most_common(1)[0][0]



###################################################################################
# 풀이 2 : defaultdict
###################################################################################

class Solution:
    def mostCommonWord(self, paragraph: str, banned: List[str]) -> str:
        words = [word for word in re.sub(r'[^\w]', ' ', paragraph)
            .lower().split()
                 if word not in banned]

        # defaultdict 객체 사용
        counts = collections.defaultdict(int)
        for word in words:
            counts[word]+=1

        return max(counts,key=count.get) # 리트코드 argmax 지원 X
